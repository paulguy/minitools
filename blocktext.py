#!/usr/bin/env python

from array import array
from itertools import repeat
from sys import argv, stdin, exit
from enum import Enum, auto
from dataclasses import dataclass

NEWLINE = ord('\n')
MINCHAR = ord(' ')
MAXCHAR = ord('~')

TESTSTR = """ !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~—è"""

FONT3 = (
    # ###.
    # ###.
    # ###.
    (7, 7, 7, 0),
    # .
    # .
    # .
    (0,),
    # ..#.
    # ..#.
    # #...
    (4, 0, 3, 0),
    # #.#.
    # ....
    # ....
    (1, 0, 1, 0),
    # .####.
    # .#.#..
    # ####..
    (4, 7, 5, 7, 1, 0),
    # ..###.
    # .###..
    # ###...
    (4, 6, 7, 3, 1, 0),
    # #..#..
    # ..#...
    # .#..#.
    (1, 4, 2, 1, 4, 0),
    # .##..
    # ####.
    # .###.
    (4, 7, 7, 6, 0),
    # #.
    # ..
    # ..
    (1, 0),
    # .#.
    # #..
    # .#.
    (2, 5, 0),
    # #..
    # .#.
    # #..
    (5, 2, 0),
    # #..#.
    # .##..
    # #..#.
    (5, 2, 2, 5, 0),
    # .#..
    # ###.
    # .#..
    (2, 7, 2, 0),
    # ...
    # .#.
    # #..
    (4, 2, 0),
    # ....
    # ###.
    # ....
    (2, 2, 2, 0),
    # ..
    # ..
    # #.
    (4, 0, 0),
    # ..#.
    # .#..
    # #...
    (4, 2, 1, 0),
    # ###.
    # #.#.
    # ###.
    (7, 5, 7, 0),
    # .#..
    # .#..
    # .#..
    (0, 0, 7, 0),
    # ##..
    # .##.
    # ###.
    (5, 7, 6, 0),
    # ###.
    # .##.
    # ###.
    (5, 7, 7, 0),
    # #.#.
    # ###.
    # ..#.
    (3, 2, 7, 0),
    # ###.
    # .##.
    # ##..
    (5, 7, 3, 0),
    # .##.
    # ##..
    # ###.
    (6, 7, 5, 0),
    # ###.
    # ..#.
    # ..#.
    (1, 1, 7, 0),
    # .##.
    # ###.
    # ##..
    (6, 7, 3, 0),
    # ###.
    # .##.
    # ##..
    (5, 7, 3, 0),
    # #.
    # ..
    # #.
    (5, 0),
    # #...
    # ..#.
    # .#..
    (1, 4, 2, 0),
    # .##.
    # ##..
    # .##.
    (2, 7, 5, 0),
    # ###.
    # ....
    # ###.
    (5, 5, 5, 0),
    # ##..
    # .##.
    # ##..
    (5, 7, 2, 0),
    # ##..
    # ..#.
    # .#..
    (1, 5, 2, 0),
    # .##..
    # #..#.
    # #.##.
    (6, 1, 5, 7, 0),
    # .#..
    # #.#.
    # ###.
    (6, 5, 6, 0),
    # ##..
    # ###.
    # ###.
    (7, 7, 6, 0),
    # ###.
    # #...
    # ###.
    (7, 5, 5, 0),
    # ##..
    # #.#.
    # ##..
    (7, 5, 2, 0),
    # ###.
    # ##..
    # ###.
    (7, 7, 5, 0),
    # ###.
    # ##..
    # #...
    (7, 3, 1, 0),
    # .#...
    # #..#.
    # .###.
    (2, 5, 4, 6, 0),
    # #.#.
    # ###.
    # #.#.
    (7, 2, 7, 0),
    # ###.
    # .#..
    # ###.
    (5, 7, 5, 0),
    # ##.
    # .#.
    # #..
    (5, 3, 0),
    # #.#.
    # ##..
    # #.#.
    (7, 2, 5, 0),
    # #...
    # #...
    # ###.
    (7, 4, 4, 0),
    # ##.##.
    # #.#.#.
    # #...#.
    (7, 1, 2, 1, 7, 0),
    # ##.#.
    # #.##.
    # #..#.
    (7, 1, 2, 7, 0),
    # .#..
    # #.#.
    # .#..
    (2, 5, 2, 0),
    # ###.
    # ###.
    # #...
    (7, 3, 3, 0),
    # .#..
    # #.#.
    # .##.
    (2, 5, 6, 0),
    # ##..
    # ###.
    # #.#.
    (7, 3, 6, 0),
    # .##.
    # .#..
    # ##..
    (4, 7, 1, 0),
    # ###.
    # .#..
    # .#..
    (1, 7, 1, 0),
    # #.#.
    # #.#.
    # .##.
    (3, 4, 7, 0),
    # #.#.
    # #.#.
    # .#..
    (3, 4, 3, 0),
    # #...#.
    # #.#.#.
    # .#.#..
    (3, 4, 2, 4, 3, 0),
    # #..#.
    # .##..
    # #..#.
    (5, 2, 2, 5, 0),
    # #.#.
    # .#..
    # .#..
    (1, 6, 1, 0),
    # ####..
    # ..#...
    # .####.
    (1, 5, 7, 5, 4, 0),
    # ##.
    # #..
    # ##.
    (7, 5, 0),
    # #...
    # .#..
    # ..#.
    (1, 2, 4, 0),
    # ##.
    # .#.
    # ##.
    (5, 7, 0),
    # .#..
    # #.#.
    # ....
    (2, 1, 2, 0),
    # ..
    # ..
    # ##
    (4, 4),
    # #..
    # .#.
    # ...
    (1, 2, 0),
    # .##.
    # #.#.
    # .##.
    (2, 5, 7, 0),
    # #..
    # ##.
    # ##.
    (7, 6, 0),
    # .##.
    # #...
    # .##.
    (2, 5, 5, 0),
    # .#.
    # ##.
    # ##.
    (6, 7, 0),
    # .##.
    # ###.
    # .##.
    (2, 7, 7, 0),
    # .##.
    # ###.
    # .#..
    (2, 7, 3, 0),
    # ##.
    # .#.
    # #..
    (5, 3, 0),
    # #...
    # ##..
    # #.#.
    (7, 2, 4, 0),
    # ..#.
    # #...
    # #...
    (6, 0, 1, 0),
    # .#.
    # .#.
    # #..
    (4, 3, 0),
    # #...
    # #.#.
    # ###.
    (7, 4, 6, 0),
    # ##.
    # .#.
    # .#.
    (1, 7, 0),
    # ......
    # ####..
    # #.#.#.
    (6, 2, 6, 2, 4, 0),
    # ....
    # ##..
    # #.#.
    (6, 2, 4, 0),
    # ...
    # ##.
    # ##.
    (6, 6, 0),
    # ##.
    # ##.
    # #..
    (7, 3, 0),
    # ##.
    # ##.
    # .#.
    (3, 7, 0),
    # ...
    # ##.
    # #..
    (6, 2, 0),
    # ....
    # .##.
    # ##..
    (4, 6, 2, 0),
    # .#..
    # ###.
    # .##.
    (2, 7, 6, 0),
    # ....
    # #.#.
    # .##.
    (2, 4, 6, 0),
    # ....
    # #.#.
    # .#..
    (2, 4, 2, 0),
    # ......
    # #.#.#.
    # .#.#..
    (2, 4, 2, 4, 2, 0),
    # #.#.
    # .#..
    # #.#.
    (5, 2, 5, 0),
    # #.#.
    # .##.
    # ##..
    (5, 6, 3, 0),
    # ##..
    # .#..
    # .##.
    (1, 7, 4, 0),
    # .#.
    # ##.
    # .#.
    (2, 7, 0),
    # #.
    # #.
    # #.
    (7, 0),
    # #..
    # ##.
    # #..
    (7, 2, 0),
    # .#.#.
    # #.#..
    # .....
    (2, 1, 2, 1, 0)
)

FONT4 = (
    # invalid
    # ####.
    # ####.
    # ####.
    # ####.
    (15, 15, 15, 15, 0),
    # space
    # .
    # .
    # .
    # .
    (0,),
    # !
    # #.
    # #.
    # ..
    # #.
    (11, 0),
    # "
    # #.#.
    # #.#.
    # ....
    # ....
    (3, 0, 3, 0),
    # #
    # .#.#.
    # #.##.
    # ##.#.
    # #.#..
    (14, 5, 10, 7, 0),
    # $
    # .###.
    # #.#..
    # .#.#.
    # ###..
    (10, 13, 11, 5, 0),
    # %
    # #..#.
    # ..#..
    # .#...
    # #..#.
    (9, 4, 2, 9, 0),
    # &
    # .##..
    # ####.
    # #.#..
    # .###.
    (6, 11, 15, 10, 0),
    # '
    # #.
    # #.
    # ..
    # ..
    (3, 0),
    # (
    # .#.
    # #..
    # #..
    # .#.
    (6, 9, 0),
    # )
    # #..
    # .#.
    # .#.
    # #..
    (9, 6, 0),
    # *
    # .#..
    # ###.
    # #.#.
    # ....
    (6, 3, 6, 0),
    # +
    # ....
    # .#..
    # ###.
    # .#..
    (4, 14, 4, 0),
    # ,
    # ..
    # ..
    # #.
    # #.
    (12, 0),
    # -
    # ....
    # ....
    # ###.
    # ....
    (4, 4, 4, 0),
    # .
    # ..
    # ..
    # ..
    # #.
    (8, 0),
    # /
    # ...#.
    # ..#..
    # .#...
    # #....
    (8, 4, 2, 1, 0),
    # 0
    # ####.
    # #..#.
    # #..#.
    # ####.
    (15, 9, 9, 15, 0),
    # 1
    # ..#..
    # .##..
    # ..#..
    # ..#..
    (0, 2, 15, 0, 0),
    # 2
    # .##..
    # #..#.
    # ..#..
    # ####.
    (10, 9, 13, 10, 0),
    # 3
    # ###..
    # .###.
    # ...#.
    # ###..
    (9, 11, 11, 6, 0),
    # 4
    # .##..
    # #.#..
    # ####.
    # ..#..
    (6, 5, 15, 4, 0),
    # 5
    # ####.
    # ###..
    # ...#.
    # ###..
    (11, 11, 11, 5, 0),
    # 6
    # .###.
    # #....
    # ####.
    # .###.
    (6, 13, 13, 13, 0),
    # 7
    # ####.
    # ...#.
    # ..#..
    # .#...
    (1, 9, 5, 3, 0),
    # 8
    # .##..
    # ####.
    # #..#.
    # .##..
    (6, 11, 11, 6, 0),
    # 9
    # ###..
    # ####.
    # ...#.
    # ###..
    (11, 11, 11, 6, 0),
    # :
    # #.
    # ..
    # ..
    # #.
    (9, 0),
    # ;
    # .#.
    # ...
    # .#.
    # #..
    (8, 5, 0),
    # <
    # ...
    # .#.
    # #..
    # .#.
    (4, 10, 0),
    # =
    # ....
    # ###.
    # ....
    # ###.
    (10, 10, 10, 0),
    # >
    # ...
    # #..
    # .#.
    # #..
    (10, 4, 0),
    # ?
    # .##..
    # #..#.
    # ..#..
    # ..#..
    (2, 1, 13, 2, 0),
    # @
    # .###..
    # #...#.
    # #.#.#.
    # ..##..
    (6, 1, 13, 9, 6, 0),
    # A
    # .##..
    # #..#.
    # ####.
    # #..#.
    (14, 5, 5, 14, 0),
    # B
    # ###..
    # ####.
    # #..#.
    # ###..
    (15, 11, 11, 5, 0),
    # C
    # .###.
    # #....
    # #....
    # .###.
    (6, 9, 9, 9, 0),
    # D
    # ###..
    # #..#.
    # #..#.
    # ###..
    (15, 9, 9, 6, 0),
    # E
    # ####.
    # ###..
    # #....
    # ####.
    (15, 11, 11, 9, 0),
    # F
    # ####.
    # #....
    # ###..
    # #....
    (15, 5, 5, 1, 0),
    # G
    # .###.
    # #....
    # #.##.
    # .##..
    (6, 9, 13, 5, 0),
    # H
    # #..#.
    # ####.
    # #..#.
    # #..#.
    (15, 2, 2, 15, 0),
    # I
    # ###.
    # .#..
    # .#..
    # ###.
    (9, 15, 9, 0),
    # J
    # .##.
    # ..#.
    # #.#.
    # .#..
    (4, 9, 7, 0),
    # K
    # #..#.
    # #.#..
    # ###..
    # #..#.
    (15, 4, 6, 9, 0),
    # L
    # #...
    # #...
    # #...
    # ###.
    (15, 8, 8, 0),
    # M
    # #...#.
    # ##.##.
    # #.#.#.
    # #...#.
    (15, 2, 4, 2, 15, 0),
    # N
    # #..#.
    # ##.#.
    # #.##.
    # #..#.
    (15, 2, 4, 15, 0),
    # O
    # .##..
    # #..#.
    # #..#.
    # .##..
    (6, 9, 9, 6, 0),
    # P
    # ###..
    # #..#.
    # ###..
    # #....
    (15, 5, 5, 2, 0),
    # Q
    # .##..
    # #..#.
    # #.##.
    # .###.
    (6, 9, 13, 14, 0),
    # R
    # ###..
    # #..#.
    # ###..
    # #..#.
    (15, 5, 5, 10, 0),
    # S
    # .###.
    # ###..
    # ...#.
    # ###..
    (10, 11, 11, 5, 0),
    # T
    # ###.
    # .#..
    # .#..
    # .#..
    (1, 15, 1, 0),
    # U
    # #..#.
    # #..#.
    # #..#.
    # .##..
    (7, 8, 8, 7, 0),
    # V
    # #...#.
    # #...#.
    # .#.#..
    # ..#...
    (3, 4, 8, 4, 3, 0),
    # W
    # #...#.
    # #.#.#.
    # ##.##.
    # #...#.
    (15, 4, 2, 4, 15, 0),
    # X
    # #.#.
    # .#..
    # #.#.
    # #.#.
    (13, 2, 13, 0),
    # Y
    # #...#.
    # .#.#..
    # ..#...
    # ..#...
    (1, 2, 12, 2, 1, 0),
    # Z
    # ####.
    # ..#..
    # .#...
    # ####.
    (9, 13, 11, 9, 0),
    # [
    # ##.
    # #..
    # #..
    # ##.
    (15, 9, 0),
    # \
    # #....
    # .#...
    # ..#..
    # ...#.
    (1, 2, 4, 8, 0),
    # ]
    # ##.
    # .#.
    # .#.
    # ##.
    (9, 15, 0),
    # ^
    # .#..
    # #.#.
    # ....
    # ....
    (2, 1, 2, 0),
    # _
    # ....
    # ....
    # ....
    # ###.
    (8, 8, 8, 0),
    # `
    # #..
    # .#.
    # ...
    # ...
    (1, 2, 0),
    # a
    # ##..
    # ..#.
    # .##.
    # ###.
    (9, 13, 14, 0),
    # b
    # #...
    # ##..
    # #.#.
    # ##..
    (15, 10, 4, 0),
    # c
    # ....
    # .##.
    # #...
    # .##.
    (4, 10, 10, 0),
    # d
    # ..#.
    # .##.
    # #.#.
    # .##.
    (4, 10, 15, 0),
    # e
    # .#..
    # ###.
    # #...
    # .##.
    (6, 11, 10, 0),
    # f
    # .#.
    # #..
    # ##.
    # #..
    (14, 5, 0),
    # g
    # .##.
    # ###.
    # ..#.
    # ##..
    (10, 11, 7, 0),
    # h
    # #...
    # ##..
    # #.#.
    # #.#.
    (15, 2, 12, 0),
    # i
    # #.
    # ..
    # #.
    # #.
    (13, 0),
    # j
    # ...
    # .#.
    # .#.
    # #..
    (8, 6, 0),
    # k
    # #...
    # #.#.
    # ##..
    # #.#.
    (15, 4, 10, 0),
    # l
    # ##.
    # .#.
    # .#.
    # .#.
    (1, 15, 0),
    # m
    # ......
    # ##.#..
    # #.#.#.
    # #.#.#.
    (14, 2, 12, 2, 12, 0),
    # n
    # ....
    # ##..
    # #.#.
    # #.#.
    (14, 2, 12, 0),
    # o
    # ....
    # .#..
    # #.#.
    # .#..
    (4, 10, 4, 0),
    # p
    # ##..
    # #.#.
    # ##..
    # #...
    (15, 5, 2, 0),
    # q
    # .##.
    # #.#.
    # .##.
    # ..#.
    (2, 5, 15, 0),
    # r
    # ...
    # ##.
    # #..
    # #..
    (14, 2, 0),
    # s
    # ....
    # .##.
    # ###.
    # ##..
    (12, 14, 6, 0),
    # t
    # #..
    # ##.
    # #..
    # .#.
    (7, 10, 0),
    # u
    # ....
    # #.#.
    # #.#.
    # .##.
    (6, 8, 14, 0),
    # v
    # ......
    # #...#.
    # .#.#..
    # ..#...
    (2, 4, 8, 4, 2, 0),
    # w
    # ......
    # #.#.#.
    # #.#.#.
    # .#.#..
    (6, 8, 6, 8, 6, 0),
    # x
    # ....
    # #.#.
    # .#..
    # #.#.
    (10, 4, 10, 0),
    # y
    # #.#.
    # .##.
    # ..#.
    # ##..
    (9, 10, 7, 0),
    # z
    # ....
    # ###.
    # .#..
    # ###.
    (10, 14, 10, 0),
    # {
    # ..#.
    # .#..
    # ##..
    # ..#.
    (4, 6, 9, 0),
    # |
    # #.
    # #.
    # #.
    # #.
    (15, 0),
    # }
    # #...
    # .##.
    # .#..
    # #...
    (9, 6, 2, 0),
    # ~
    # .#.#.
    # #.#..
    # .....
    # .....
    (2, 1, 2, 1, 0)
)

CHARS3 = array('w', ' ü¨Äü¨Éü¨Ñü¨èü¨êü¨ì‚ñåü¨Åü¨Çü¨Öü¨Üü¨ëü¨íü¨îü¨ïü¨áü¨àü¨ãü¨åü¨ñü¨óü¨öü¨õü¨âü¨äü¨çü¨éü¨òü¨ôü¨úü¨ùü¨ûü¨üü¨¢ü¨£ü¨≠ü¨Æü¨±ü¨≤ü¨†ü¨°ü¨§ü¨•ü¨Øü¨∞ü¨≥ü¨¥ü¨¶ü¨ßü¨©ü¨™ü¨µü¨∂ü¨πü¨∫‚ñêü¨®ü¨´ü¨¨ü¨∑ü¨∏ü¨ª‚ñà')

CHARS4 = array('w', ' ú∫®ú¥Ä‚ñòú¥âú¥äüØ¶ú¥çú∫£ú¥∂ú¥πú¥∫‚ññúµÖúµà‚ñåú∫´üÆÇú¥Åú¥Çú¥ãú¥åú¥éú¥èú¥∑ú¥∏ú¥ªú¥ºúµÜúµáúµâúµäú¥Éú¥Ñú¥Üú¥áú¥êú¥ëú¥îú¥ïú¥Ωú¥æúµÅúµÇúµãúµåúµéúµè‚ñùú¥Öú¥à‚ñÄú¥íú¥ìú¥ñú¥óú¥øúµÄúµÉúµÑ‚ñûúµçúµê‚ñõ'
                    'ú¥òú¥ôú¥úú¥ùú¥ßú¥®ú¥´ú¥¨úµëúµíúµïúµñúµ°úµ¢úµ•úµ¶ú¥öú¥õú¥ûú¥üú¥©ú¥™ú¥≠ú¥Æúµìúµîúµóúµòúµ£úµ§úµßúµ®üØßú¥†ú¥£ú¥§ú¥Øú¥∞ú¥≥ú¥¥úµôúµöúµùúµûúµ©úµ™úµ≠úµÆú¥°ú¥¢ú¥•ú¥¶ú¥±ú¥≤ú¥µüÆÖúµõúµúúµüúµ†úµ´úµ¨úµØúµ∞'
                    'ú∫†úµ±úµ¥úµµú∂Äú∂Åú∂Ñú∂Ö‚ñÇú∂¨ú∂Øú∂∞ú∂ªú∂ºú∂øú∑Äúµ≤úµ≥úµ∂úµ∑ú∂Çú∂Éú∂Üú∂áú∂≠ú∂Æú∂±ú∂≤ú∂Ωú∂æú∑Åú∑Çúµ∏úµπúµºúµΩú∂àú∂âú∂åú∂çú∂≥ú∂¥ú∂∑ú∂∏ú∑Éú∑Ñú∑áú∑àúµ∫úµªúµæúµøú∂äú∂ãú∂éú∂èú∂µú∂∂ú∂πú∂∫ú∑Öú∑Üú∑âú∑ä'
                    '‚ñóú∂êú∂ì‚ñöú∂úú∂ùú∂†ú∂°ú∑ãú∑åú∑èú∑ê‚ñÑú∑õú∑û‚ñôú∂ëú∂íú∂îú∂ïú∂ûú∂üú∂¢ú∂£ú∑çú∑éú∑ëú∑íú∑úú∑ùú∑üú∑†ú∂ñú∂óú∂ôú∂öú∂§ú∂•ú∂®ú∂©ú∑ìú∑îú∑óú∑òú∑°ú∑¢‚ñÜú∑§‚ñêú∂òú∂õ‚ñúú∂¶ú∂ßú∂™ú∂´ú∑ïú∑ñú∑ôú∑ö‚ñüú∑£ú∑•‚ñà')

class Mode(Enum):
    SEXTANTS = auto()
    OCTANTS = auto()

@dataclass
class BigFontLUT:
    font : tuple[tuple[int]]
    chars : array
    shift : int

MODES : dict[Mode, BigFontLUT] = {
    Mode.SEXTANTS: BigFontLUT(FONT3, CHARS3, 3),
    Mode.OCTANTS: BigFontLUT(FONT4, CHARS4, 4)
}

def text_to_block(text : str, mode : Mode) -> str:
    gfx = list()
    gfx.append(list())
    line = 0

    font = MODES[mode].font
    chars = MODES[mode].chars
    shift = MODES[mode].shift

    # build up column bits
    for c in text:
        n = ord(c)
        if n == NEWLINE:
            if len(gfx[line]) % 2 == 1:
                gfx[line].append(0)
            gfx.append(list())
            line += 1
        elif n < MINCHAR or n > MAXCHAR:
            gfx[line].extend(font[0])
        else:
            gfx[line].extend(font[n - MINCHAR + 1])

    # pack the bits
    totallen = 0
    for lnum, line in enumerate(gfx):
        totallen += len(line) // 2 + 1
        for num in range(len(line) // 2):
            gfx[lnum][num] = gfx[lnum][num * 2] | (gfx[lnum][num * 2 + 1] << shift)
        gfx[lnum] = gfx[lnum][:len(gfx[lnum]) // 2]
    totallen -= 1

    # generate the output string
    outtext = array('w', repeat(' ', totallen))
    pos = 0
    for lnum, line in enumerate(gfx):
        for num, val in enumerate(line):
            outtext[pos + num] = chars[val]
        if lnum < len(gfx) - 1:
            pos += len(line)
            outtext[pos] = '\n'
            pos += 1

    return outtext.tounicode()

def main():
    mode = Mode.SEXTANTS
    had_arg = 1
    if len(argv) > 1:
        if argv[1].startswith('--'):
            arg = argv[1][2:]
            if arg == 'help':
                print(f"USAGE: {argv[0]} [--help] [--sextants] [--octants] [--test] [text...]\n" \
                      f"  --help - output this text\n" \
                      f"  --sextants - Use 3 pixel tall font.  Less readable, more compatible.\n" \
                      f"  --octants - Use 4 pixel tall font.  More readable, less compatible.\n" \
                      f"  --test - Test mode.\n" \
                      f"  text... - optional text provided on the command line, otherwise read from stdin.\n")
                exit(0)
            elif arg == 'sextants':
                mode = Mode.SEXTANTS
                had_arg = 2
            elif arg == 'octants':
                mode = Mode.OCTANTS
                had_arg = 2
            elif arg == 'test':
                print(text_to_block(TESTSTR, Mode.SEXTANTS))
                print(text_to_block(TESTSTR, Mode.OCTANTS))
                exit(0)

    if len(argv[had_arg:]) > 0:
        print(text_to_block(' '.join(argv[had_arg:]), mode))
    else:
        while True:
            text = stdin.read()
            if len(text) == 0:
                break
            print(text_to_block(text, mode))

if __name__ == '__main__':
    main()
